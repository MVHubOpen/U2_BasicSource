      SUBROUTINE MVHUB.MAP.HANDLER.SUB(REQUEST.HEADER,REQUEST,REPLY.HEADER,REPLY)
*-------------------------------------------------------
* MVHub for Mvhub Map
* Created 17:33:30 23 DEC 2016
*-------------------------------------------------------
      HANDLER.SUB.NAME = "MVHUB.MAP"
      INCLUDE MVHUB.BP HANDLER.SUB.INCLUDE
* Custom Initialize Code
      INCLUDE MVHUB.BP MVHUB.MAP.INCLUDE
*
      FILENAME="MVHUB.MAP"
      OPEN "MVHUB.LOG" TO F.WLOG THEN
         WRITE REQUEST.HEADER ON F.WLOG,HANDLER.SUB.NAME:"_REQUEST_HEADER"
         WRITE REQUEST ON F.WLOG,HANDLER.SUB.NAME:"_REQUEST"
      END
*
      REPLY.STATUS="200" ; REPLY.TYPE="application/json"
      IF UDOCreate(MVHUB_OBJECT, REPLYOBJ)#MVHUB_SUCCESS THEN ABORT
*
      IF UDORead(REQUEST,MVHUB_FORMAT_JSON,INOBJ)#MVHUB_SUCCESS THEN
         GOSUB ADD.NODE.ERROR
      END ELSE
         IF UDOGetProperty(INOBJ, "action", ACTION, ACTION.TYPE)#MVHUB_SUCCESS THEN
            GOSUB ADD.NODE.ERROR
            ACTION.TYPE = -1
         END
*
         IF ACTION.TYPE # MVHUB_STRING THEN
            ERROR.CODE="900"
            ERROR.MESSAGE="Action is missing or must be a string"
            REPLY.STATUS="500"
            GOSUB ADD.ERROR
         END ELSE
            OPEN FILENAME TO @STDFIL ELSE
               ERROR.CODE=500
               ERROR.MESSAGE="Unknow Action :":ACTION
               REPLY.STATUS="500"
               GOSUB ADD.ERROR
               RETURN
            END
         END
      END
*
      IF REPLY.STATUS="200" THEN
         STATUS = UDOSetProperty(REPLYOBJ, "action",OCONV(ACTION,"MCT"):"Reply")
         ACTION=UPCASE(ACTION)
         BEGIN CASE
            CASE ACTION="READ"
               GOSUB GET.ID.RECORD
               GOSUB BUILD.REPLY
            CASE ACTION="FORMAT"
               ERROR.CODE=520
               ERROR.MESSAGE="FORMAT is not allowed with this service"
               GOSUB ADD.ERROR
            CASE ACTION="UPDATE"
               GOSUB GET.ID.RECORD
               GOSUB APPLY.UPDATE
               GOSUB UPDATE.FILE
               GOSUB BUILD.REPLY
            CASE ACTION="CREATE"
               ERROR.CODE=520
               ERROR.MESSAGE="CREATE is not allowed with this service"
               GOSUB ADD.ERROR
            CASE ACTION="DELETE"
            CASE ACTION="LIST"
               GOSUB BUILD.REPLY
            CASE ACTION="ERROR"          ; * Error Already Handled
            CASE 1
               ERROR.CODE=500
               ERROR.MESSAGE="Unknow Action :":ACTION
               GOSUB ADD.ERROR
         END CASE
*
         IF UDOWrite(REPLYOBJ, MVHUB_FORMAT_JSON, REPLY)#MVHUB_SUCCESS THEN
            REPLY.STATUS=409
            REPLY='{"errors":[{"code": 409,"message":"Unable to render document"}]}'
         END
*
      END
*
      RELEASE
      CLOSE FILE
*
      RETURN
*-------------------------------------------------------
GET.ID.RECORD:
*-------------------------------------------------------
      ID.REC=""
      IF UDOGetProperty(INOBJ, "key", KEYOBJ, KEYOBJ.TYPE)#MVHUB_SUCCESS THEN
         GOSUB ADD.NODE.ERROR
         KEYOBJ.TYPE = -1
      END
*
      IF KEYOBJ.TYPE # MVHUB_OBJECT THEN
         ERROR.CODE=400
         ERROR.MESSAGE="[key is missing or must be a object"
         GOSUB ADD.ERROR
         REPLY.STATUS="400"
      END
      STATUS = UDOGetProperty(KEYOBJ, "mapId", VALUE, VALUE.TYPE)
      IF STATUS = MVHUB_ERROR THEN
         STATUS = UDOGetLastError(ERROR.CODE,ERROR.MESSAGE)
         ERROR.MESSAGE="[mapId] ":ERROR.MESSAGE
         GOSUB ADD.ERROR
         RETURN
      END
      IF VALUE.TYPE=MVHUB_STRING OR VALUE.TYPE=MVHUB_NUMBER THEN ID.REC<1> = VALUE
*
      ID = ID.REC
      RECORD="" ; WORK.RECORD=""
*
      READU RECORD FROM FILE,ID ELSE
         IF ACTION="READ" THEN
            ERROR.CODE=404
            ERROR.MESSAGE=ID:" not on file (MVHUB.MAP)"
            GOSUB ADD.ERROR
            RETURN
         END
         RECORD=""
      END
*
      RETURN
*-------------------------------------------------------
APPLY.UPDATE:
*-------------------------------------------------------
      ID.REC=ID
      STATUS = UDOGetProperty(INOBJ, "item", ITEMOBJ, ITEMOBJ.TYPE)
      IF STATUS = MVHUB_ERROR THEN
         STATUS = UDOGetLastError(ERROR.CODE,ERROR.MESSAGE)
         ERROR.MESSAGE="[key] ":ERROR.MESSAGE
         GOSUB ADD.ERROR
         RETURN
      END
*
      IF ITEMOBJ.TYPE # MVHUB_OBJECT THEN
         RERROR.CODE=400
         ERROR.MESSAGE="[item] is missing or must be a object"
         GOSUB ADD.ERROR
         RETURN
      END
*
      UPDATEOBJ=ITEMOBJ ; UPDATEOBJ.TYPE=ITEMOBJ.TYPE
      UPDATE.BASE=@TRUE ; UPDATE.NAME="title" ; UPDATE.CONV=""
      UPDATE.ATTR=1 ; UPDATE.VALPOS=0 ; UPDATE.SUBVALPOS=0
      GOSUB UPDATE.RECORD
*
      UPDATE.BASE=@TRUE ; UPDATE.NAME="databaseFilename" ; UPDATE.CONV=""
      UPDATE.ATTR=2 ; UPDATE.VALPOS=0 ; UPDATE.SUBVALPOS=0
      GOSUB UPDATE.RECORD
*
      UPDATE.BASE=@TRUE ; UPDATE.NAME="version" ; UPDATE.CONV=""
      UPDATE.ATTR=3 ; UPDATE.VALPOS=0 ; UPDATE.SUBVALPOS=0
      GOSUB UPDATE.RECORD
*
      UPDATE.BASE=@TRUE ; UPDATE.NAME="delimiter" ; UPDATE.CONV=""
      UPDATE.ATTR=4 ; UPDATE.VALPOS=0 ; UPDATE.SUBVALPOS=0
      GOSUB UPDATE.RECORD
*
      UPDATE.BASE=@TRUE ; UPDATE.NAME="sourceCodeFile" ; UPDATE.CONV=""
      UPDATE.ATTR=5 ; UPDATE.VALPOS=0 ; UPDATE.SUBVALPOS=0
      GOSUB UPDATE.RECORD
*
      UPDATE.BASE=@TRUE ; UPDATE.NAME="createCode" ; UPDATE.CONV=""
      UPDATE.ATTR=10 ; UPDATE.VALPOS=0 ; UPDATE.SUBVALPOS=0
      GOSUB UPDATE.RECORD
*
      UPDATE.BASE=@TRUE ; UPDATE.NAME="readCode" ; UPDATE.CONV=""
      UPDATE.ATTR=11 ; UPDATE.VALPOS=0 ; UPDATE.SUBVALPOS=0
      GOSUB UPDATE.RECORD
*
      UPDATE.BASE=@TRUE ; UPDATE.NAME="writeCode" ; UPDATE.CONV=""
      UPDATE.ATTR=12 ; UPDATE.VALPOS=0 ; UPDATE.SUBVALPOS=0
      GOSUB UPDATE.RECORD
*
      UPDATE.BASE=@TRUE ; UPDATE.NAME="initializeCode" ; UPDATE.CONV=""
      UPDATE.ATTR=13 ; UPDATE.VALPOS=0 ; UPDATE.SUBVALPOS=0
      GOSUB UPDATE.RECORD
*
      UPDATE.BASE=@TRUE ; UPDATE.NAME="eventCode" ; UPDATE.CONV=""
      UPDATE.ATTR=14 ; UPDATE.VALPOS=0 ; UPDATE.SUBVALPOS=0
      GOSUB UPDATE.RECORD
*
*
* Reset fields Table
*
      RECORD<20>="" ; RECORD<21>="" ; RECORD<22>="" ; RECORD<23>=""
      RECORD<24>="" ; RECORD<25>="" ; RECORD<26>="" ; RECORD<27>=""
      RECORD<28>="" ; RECORD<29>="" ; RECORD<30>="" ; RECORD<31>=""
      RECORD<33>=""
*
      IF UDOGetProperty(ITEMOBJ,"fields",FIELDSTABLEARY,CHK.TYPE)#MVHUB_SUCCESS THEN
         GOSUB ADD.NODE.ERROR
      END ELSE
         LOOP.POS=0
         LOOP
            STATUS = UDOArrayGetNextItem(FIELDSTABLEARY,UPDATEOBJ,UPDATEOBJ.TYPE)
         UNTIL STATUS = MVHUB_ERROR DO
            LOOP.POS+=1
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="record" ; UPDATE.CONV=""
            UPDATE.ATTR=20 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="name" ; UPDATE.CONV=""
            UPDATE.ATTR=21 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="assocation" ; UPDATE.CONV=""
            UPDATE.ATTR=22 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="attr" ; UPDATE.CONV="MD0"
            UPDATE.ATTR=23 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="vpos" ; UPDATE.CONV="MD0"
            UPDATE.ATTR=24 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="spos" ; UPDATE.CONV="MD0"
            UPDATE.ATTR=25 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="type" ; UPDATE.CONV="MCU"
            UPDATE.ATTR=26 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="conversion" ; UPDATE.CONV=""
            UPDATE.ATTR=27 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="length" ; UPDATE.CONV="MD0"
            UPDATE.ATTR=28 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="readonly" ; UPDATE.CONV="MD0"
            UPDATE.ATTR=29 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="beforeConversionCode" ; UPDATE.CONV=""
            UPDATE.ATTR=30 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="afterConversionCode" ; UPDATE.CONV=""
            UPDATE.ATTR=31 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="comment" ; UPDATE.CONV=""
            UPDATE.ATTR=33 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
         REPEAT
      END
*
*
* Reset association Table
*
      RECORD<16>="" ; RECORD<17>="" ; RECORD<18>="" ; RECORD<19>=""
*
      IF UDOGetProperty(ITEMOBJ,"association",ASSOCIATIONTABLEARY,CHK.TYPE)#MVHUB_SUCCESS THEN
         GOSUB ADD.NODE.ERROR
      END ELSE
         LOOP.POS=0
         LOOP
            STATUS = UDOArrayGetNextItem(ASSOCIATIONTABLEARY,UPDATEOBJ,UPDATEOBJ.TYPE)
         UNTIL STATUS = MVHUB_ERROR DO
            LOOP.POS+=1
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="associatedKey" ; UPDATE.CONV=""
            UPDATE.ATTR=16 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="associatedName" ; UPDATE.CONV=""
            UPDATE.ATTR=17 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="associatedDescription" ; UPDATE.CONV=""
            UPDATE.ATTR=18 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
            UPDATE.BASE=@TRUE ; UPDATE.NAME="ctrlAttr" ; UPDATE.CONV="MD0"
            UPDATE.ATTR=19 ; UPDATE.VALPOS=LOOP.POS ; UPDATE.SUBVALPOS=0
            GOSUB UPDATE.RECORD
*
         REPEAT
      END
*
*
      RETURN
*-------------------------------------------------------
UPDATE.RECORD:
*-------------------------------------------------------
      STATUS = UDOGetProperty(UPDATEOBJ,UPDATE.NAME,CHK,CHK.TYPE)
      IF STATUS#MVHUB_ERROR THEN
         IF CHK.TYPE=MVHUB_TRUE THEN CHK="Y"
         IF CHK.TYPE=MVHUB_FALSE THEN CHK="N"
         IF UPDATE.CONV#"" THEN CHK=ICONV(CHK,UPDATE.CONV)
         IF UPDATE.BASE THEN
            RECORD<UPDATE.ATTR,UPDATE.VALPOS,UPDATE.SUBVALPOS>=CHK
         END ELSE
            WORK.RECORD<UPDATE.ATTR,UPDATE.VALPOS,UPDATE.SUBVALPOS>=CHK
         END
      END
*
      RETURN
*-------------------------------------------------------
UPDATE.FILE:
*-------------------------------------------------------
* Custom Write Code
      CCODE=RECORD<12> ; CONVERT CHAR$CRLF TO @VM:@VM IN CCODE ; RECORD<12>=CCODE
      CCODE=RECORD<11> ; CONVERT CHAR$CRLF TO @VM:@VM IN CCODE ; RECORD<11>=CCODE
      CCODE=RECORD<12> ; CONVERT CHAR$CRLF TO @VM:@VM IN CCODE ; RECORD<12>=CCODE
      WRITE RECORD ON FILE,ID
      EXECUTE "CREATE.MVHUB MVHUB.MAP /COMPILE /CATALOG " CAPTURING MEMORY
*
*
      RETURN
*-------------------------------------------------------
BUILD.REPLY:
*-------------------------------------------------------
      IF ACTION#"LIST" THEN
         STATUS = UDOCreate(MVHUB_OBJECT, KEYOBJ)
         STATUS = UDOSetProperty(REPLYOBJ, "key",KEYOBJ)
*
         ID.REC=ID
         STATUS = UDOCreate(MVHUB_OBJECT, ITEMOBJ)
         STATUS = UDOSetProperty(REPLYOBJ, "item",ITEMOBJ)
*
      END
      STATUS = UDOSetProperty(KEYOBJ,"mapId",ID.REC<1>)
      IF STATUS = MVHUB_ERROR THEN
         STATUS = UDOGetLastError(ERROR.CODE,ERROR.MESSAGE)
         ERROR.MESSAGE="[mapId] ":ERROR.MESSAGE
         GOSUB ADD.ERROR
         RETURN
      END
*
      IF UDOSetProperty(ITEMOBJ, "title",RECORD<1,0,0>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
      IF UDOSetProperty(ITEMOBJ, "databaseFilename",RECORD<2,0,0>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
      IF UDOSetProperty(ITEMOBJ, "version",RECORD<3,0,0>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
      IF UDOSetProperty(ITEMOBJ, "delimiter",RECORD<4,0,0>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
      IF UDOSetProperty(ITEMOBJ, "sourceCodeFile",RECORD<5,0,0>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
      IF UDOSetProperty(ITEMOBJ, "createCode",RECORD<10,0,0>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
      IF UDOSetProperty(ITEMOBJ, "readCode",RECORD<11,0,0>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
      IF UDOSetProperty(ITEMOBJ, "writeCode",RECORD<12,0,0>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
      IF UDOSetProperty(ITEMOBJ, "initializeCode",RECORD<13,0,0>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
      IF UDOSetProperty(ITEMOBJ, "eventCode",RECORD<14,0,0>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
*
* Table for fields
*
      STATUS = UDOCreate(MVHUB_ARRAY,FIELDSTABLEARY)
      STATUS = UDOSetProperty(ITEMOBJ,"fields",FIELDSTABLEARY)
      LOOP.CNT=DCOUNT(RECORD<26>,@VM)
      FOR LOOP.POS=1 TO LOOP.CNT
         IF UDOCreate(MVHUB_OBJECT,FIELDSOBJ)#MVHUB_SUCCESS THEN
            GOSUB ADD.NODE.ERROR
         END ELSE
            IF UDOArrayAppendItem(FIELDSTABLEARY,FIELDSOBJ)#MVHUB_SUCCESS THEN
               GOSUB ADD.NODE.ERROR
            END ELSE
               IF UDOSetProperty(FIELDSOBJ,"record",RECORD<20,LOOP.POS>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(FIELDSOBJ,"name",RECORD<21,LOOP.POS>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(FIELDSOBJ,"assocation",RECORD<22,LOOP.POS>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(FIELDSOBJ,"attr",RECORD<23,LOOP.POS>+0)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(FIELDSOBJ,"vpos",RECORD<24,LOOP.POS>+0)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(FIELDSOBJ,"spos",RECORD<25,LOOP.POS>+0)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(FIELDSOBJ,"type",RECORD<26,LOOP.POS>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(FIELDSOBJ,"conversion",RECORD<27,LOOP.POS>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(FIELDSOBJ,"length",RECORD<28,LOOP.POS>+0)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(FIELDSOBJ,"readonly",RECORD<29,LOOP.POS>+0)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(FIELDSOBJ,"beforeConversionCode",RECORD<30,LOOP.POS>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(FIELDSOBJ,"afterConversionCode",RECORD<31,LOOP.POS>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(FIELDSOBJ,"comment",RECORD<33,LOOP.POS>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
            END
         END
      NEXT LOOP.POS
*
*
* Table for association
*
      STATUS = UDOCreate(MVHUB_ARRAY,ASSOCIATIONTABLEARY)
      STATUS = UDOSetProperty(ITEMOBJ,"association",ASSOCIATIONTABLEARY)
      LOOP.CNT=DCOUNT(RECORD<17>,@VM)
      FOR LOOP.POS=1 TO LOOP.CNT
         IF UDOCreate(MVHUB_OBJECT,ASSOCIATIONOBJ)#MVHUB_SUCCESS THEN
            GOSUB ADD.NODE.ERROR
         END ELSE
            IF UDOArrayAppendItem(ASSOCIATIONTABLEARY,ASSOCIATIONOBJ)#MVHUB_SUCCESS THEN
               GOSUB ADD.NODE.ERROR
            END ELSE
               IF UDOSetProperty(ASSOCIATIONOBJ,"associatedKey",RECORD<16,LOOP.POS>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(ASSOCIATIONOBJ,"associatedName",RECORD<17,LOOP.POS>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(ASSOCIATIONOBJ,"associatedDescription",RECORD<18,LOOP.POS>)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
               IF UDOSetProperty(ASSOCIATIONOBJ,"ctrlAttr",RECORD<19,LOOP.POS>+0)#MVHUB_SUCCESS THEN GOSUB ADD.NODE.ERROR
            END
         END
      NEXT LOOP.POS
*
*
      RETURN
