*-------------------------------------------------------
* mvHubOpen, copyright (c) by James F Thompson
* Distributed under an MIT license:
*                    https://opensource.org/licenses/MIT
*-------------------------------------------------------
    EQUATE CHAR$LINEFEED LIT "CHAR(10)"
    EQUATE CHAR$RETURN LIT "CHAR(13)"
    EQUATE CHAR$CRLF LIT "CHAR(13):CHAR$LINEFEED"
*
    EQUATE KEY.ASSOC LIT '("###KEY###")'
    EQUATE KEY.ASSOC.DESC LIT '("Key Parts")'
    EQUATE BASE.ASSOC LIT '("###ROOT##")'
    EQUATE BASE.ASSOC.DESC LIT '("Base Record")'
    EQUATE SEPARATOR LIT '@AM:"*"'
*
    EQUATE MAP$VERSION.NUMBER TO "MVHUB_1.0.1B"
    EQUATE KEYOBJ.NAME TO "key"
    EQUATE ITEMOBJ.NAME TO "item"
*
    EQUATE MAP$TITLE TO 1
    EQUATE MAP$DATA.FILENAME TO 2
    EQUATE MAP$MAP.VERSION TO 3
    EQUATE MAP$DELIMITER TO 4
    EQUATE MAP$SOURCEFILE TO 5
    EQUATE MAP$MODULE TO 6
    EQUATE MAP$CREATECODE TO 10
    EQUATE MAP$READCODE TO 11
    EQUATE MAP$WRITECODE TO 12
    EQUATE MAP$INITCODE TO 13
    EQUATE MAP$EVENTCODE TO 14
*
    EQUATE MAP$ASSOC TO 26
    EQUATE MAP$ASSOC_NAME TO 27
    EQUATE MAP$ASSOC_DESCRIPTION TO 28
    EQUATE MAP$CTRLATTR TO 29
    EQUATE MAP$ASSOC_TYPE TO 30
    EQUATE MAP$ASSOC__SETUP9 TO 31
    EQUATE MAP$ASSOC__SETUP8 TO 32
    EQUATE MAP$ASSOC__SETUP7 TO 33
    EQUATE MAP$ASSOC__SETUP6 TO 34
    EQUATE MAP$ASSOC__SETUP5 TO 35
    EQUATE MAP$ASSOC__SETUP4 TO 36
    EQUATE MAP$ASSOC__SETUP3 TO 37
    EQUATE MAP$ASSOC__SETUP2 TO 38
    EQUATE MAP$ASSOC__SETUP1 TO 39
*
    EQUATE QUERY$VERB TO 40
    EQUATE QUERY$OPERAND TO 41
    EQUATE QUERY$VALUE TO 42
    EQUATE QUERY$CONVERSION TO 43
*
    EQUATE MAP$BASE TO 49
*
    EQUATE FLD$RECORD TO 1
    EQUATE FLD$NAME TO 2
    EQUATE FLD$ASSOC TO 3
    EQUATE FLD$ATTR TO 4
    EQUATE FLD$VALPOS TO 5
    EQUATE FLD$SUBVALPOS TO 6
    EQUATE FLD$TYPE TO 7
    EQUATE FLD$CONV TO 8
    EQUATE FLD$DEFAULT TO 9
    EQUATE FLD$LENGTH TO 10
    EQUATE FLD$READONLY TO 11
    EQUATE FLD$QUERYITEM TO 12
    EQUATE FLD$LABEL TO 13
    EQUATE FLD$COMMENT TO 14
*
    EQUATE FLD$WEB_SETUP0 TO 21
    EQUATE FLD$WEB_SETUP9 TO 22
    EQUATE FLD$WEB_SETUP8 TO 23
    EQUATE FLD$WEB_SETUP7 TO 24
    EQUATE FLD$WEB_SETUP6 TO 25
    EQUATE FLD$WEB_SETUP5 TO 26
    EQUATE FLD$WEB_SETUP4 TO 27
    EQUATE FLD$WEB_SETUP3 TO 28
    EQUATE FLD$WEB_SETUP2 TO 29
    EQUATE FLD$WEB_SETUP1 TO 30
    EQUATE FLD$OFFSET TO 30
*
    EQUATE TEMPLATE$DESCRIPTION TO 1
    EQUATE TEMPLATE$INBOUND TO 2
    EQUATE TEMPLATE$OUTBOUND TO 3
    EQUATE TEMPLATE$JSDEFAULT TO 4
*
    EQUATE ASSOCTYPES$NODE TO "N"
    EQUATE ASSOCTYPES$LIST TO "L"
*
    EQUATE RECORD$ID TO "I"
    EQUATE RECORD$BASE TO "B"
    EQUATE RECORD$WORK TO "W"
*
    EQUATE VARTYPE$STRING TO "S"
    EQUATE VARTYPE$NUMBER TO "N"
    EQUATE VARTYPE$BOOL TO "B"
    EQUATE VARTYPE$DATE TO "D"
    EQUATE VARTYPE$TIME TO "T"
*
* MODULE Section
*
    EQU MODULE$TITLE TO 1
    EQU MODULE$JSNAME TO 2
    EQU MODULE$BLDLST_MAPIID TO 6
*
* Services
*
    EQUATE NAME.REMOVE LIT '@VM:"-/_."'
    NAME.REMOVE.SPACE = SPACE(LEN(NAME.REMOVE))
*
    IF UNASSIGNED(BASE.PAD) THEN BASE.PAD=SPACE(4)
    EQU PAD LIT "BASE.PAD"
    EQU PAD1 LIT "BASE.PAD"
    EQU PAD2 LIT "BASE.PAD:BASE.PAD"
    EQU PAD3 LIT "BASE.PAD:BASE.PAD:BASE.PAD"
    EQU PAD4 LIT "BASE.PAD:BASE.PAD:BASE.PAD:BASE.PAD"
    EQU PAD5 LIT "BASE.PAD:BASE.PAD:BASE.PAD:BASE.PAD:BASE.PAD"
*
* Universal Sentence Parser
*
    IF UNASSIGNED(HANDLER.SUB.NAME) THEN
        HANDLER.SUB.NAME="" ; SENTENCE=@SENTENCE
        POS=0 ; QUOTE=@FALSE ; 
        LASTC="&&&&" ; SEN=""
        LOOP
            POS+=1 ; C=SENTENCE[POS,1]
        UNTIL C="" DO
            BEGIN CASE
                CASE C='"'
                    QUOTE=NOT(QUOTE)
                CASE C=" " AND NOT(QUOTE)
                    IF LAST.C#@AM THEN SEN:=@AM
                CASE 1
                    SEN:=C
            END CASE
            LAST.C=C
        REPEAT
        SEN=TRIM(SEN,@AM)
*
        IF SEN<1>="RUN" THEN
            SEN=DELETE(SEN,1) ; SEN=DELETE(SEN,1)
            LOCATE("TRAP",SEN;DPOS) THEN SEN=DELETE(SEN,DPOS)
            LOCATE("LPTR",SEN;DPOS) THEN SEN=DELETE(SEN,DPOS)
        END
    END ELSE
        SENTENCE="" ; SEN=""
    END
*
    GOTO MVHUB.MAP.INCLUDE.END.OF.INCLUDE
*-------------------------------------------------------
BLD.JSON.NAME:
*-------------------------------------------------------
    IF UNASSIGNED(ASSOCIATED.NAME) THEN ASSOCIATED.NAME=""
    CONVERT NAME.REMOVE TO NAME.REMOVE.SPACE IN WORK.NAME
    WORK.NAME=TRIM(WORK.NAME)
    IF UPCASE(ASSOCIATED.NAME)=UPCASE(WORK.NAME[1,LEN(ASSOCIATED.NAME)]) THEN
        WORK.NAME=TRIM(WORK.NAME[LEN(ASSOCIATED.NAME)+1,LEN(WORK.NAME)])
    END
*
    JSON.NAME="" ; UPCASEIT=@FALSE
    WLEN=LEN(WORK.NAME)
    FOR WPOS=1 TO WLEN
        WC=WORK.NAME[WPOS,1]
        BEGIN CASE
            CASE WC=" "
                UPCASEIT=@TRUE
            CASE NOT(ALPHA(WC))
                IF NUM(WC) AND JSON.NAME#"" THEN JSON.NAME:=WC
            CASE UPCASEIT
                JSON.NAME:=UPCASE(WC)
                UPCASEIT=@FALSE
            CASE 1
                JSON.NAME:=DOWNCASE(WC)
        END CASE
    NEXT WPOS
*
    RETURN
*-------------------------------------------------------
SET.WVAR:
*-------------------------------------------------------
    IF UNASSIGNED(MAP.REC) THEN MAP.REC=""
    IF UNASSIGNED(CPOS) THEN CPOS=9999
    WASSOC.ID=MAP.REC<MAP$BASE+FLD$ASSOC,CPOS>
    WRECORD=MAP.REC<MAP$BASE+FLD$RECORD,CPOS>
    WNAME=MAP.REC<MAP$BASE+FLD$NAME,CPOS> ; IF WNAME="" THEN WNAME="FLD":CPOS
    WATTR=MAP.REC<MAP$BASE+FLD$ATTR,CPOS>
    WVALPOS=MAP.REC<MAP$BASE+FLD$VALPOS,CPOS>+0
    WSUBVALPOS=MAP.REC<MAP$BASE+FLD$SUBVALPOS,CPOS>+0
    WCONV=MAP.REC<MAP$BASE+FLD$CONV,CPOS>
    WDEFAULT=MAP.REC<MAP$BASE+FLD$DEFAULT,CPOS>
    WFLDTYPE=MAP.REC<MAP$BASE+FLD$TYPE,CPOS>
    WQUERYITEM=MAP.REC<MAP$BASE+FLD$QUERYITEM,CPOS>
    WLABEL=MAP.REC<MAP$BASE+FLD$LABEL,CPOS>
    WLENGTH=MAP.REC<MAP$BASE+FLD$LENGTH,CPOS>
    WREADONLY=(MAP.REC<MAP$BASE+FLD$READONLY,CPOS>="Y")
    WQUERYITEM=(MAP.REC<MAP$BASE+FLD$QUERYITEM,CPOS>="Y")
*
    RETURN
*-------------------------------------------------------
MVHUB.MAP.INCLUDE.END.OF.INCLUDE:
*-------------------------------------------------------
