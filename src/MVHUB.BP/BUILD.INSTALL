*-------------------------------------------------------
* Cypress Business Solutions
* P.O. Box 1637
* Woodstock, GA 30188
* (678) 494-9353
* All Rights Reserved @ 2016
* System : e-CAT
* Date   : 12/19/2016
*-------------------------------------------------------
    INCLUDE MVHUB.BP MVHUB.MAP.INCLUDE
    OPEN "MVHUB.BP" TO F.BP ELSE ABORT 201,"MVHUB.BP"
*
    SRC="*-------------------------------------------------------"
    SRC<-1>="* Build Install for  Version #":MAP$VERSION.NUMBER
    SRC<-1>="* Built ":TIMEDATE()
    SRC<-1>="*-------------------------------------------------------"
*
    SRC<-1>='EQUATE CHAR$LF LIT "CHAR(10)"'
    SRC<-1>='EQUATE CHAR$RETURN LIT "CHAR(13)"':SEPARATOR
*
    SRC<-1>='OPEN "MVHUB.BP" TO F.BP ELSE'
    SRC<-1>='EXECUTE "ICREATE-FILE DATA MVHUB.BP 19"'
    SRC<-1>='EXECUTE "ICREATE-FILE DICT MVHUB.BP 18 11 4"'
    SRC<-1>='OPEN "MVHUB.BP" TO F.BP ELSE'
    SRC<-1>='ABORT "UNABLE TO CREATE SOURCE FILE"'
    SRC<-1>="END":@AM:"END":SEPARATOR
    SRC<-1>='OPEN "DICT","MVHUB.BP" TO FD.BP ELSE'
    SRC<-1>='ABORT "UNABLE TO OPEN DICT SOURCE FILE"'
    SRC<-1>="END":SEPARATOR
*
    SRC<-1>='OPEN "MVHUB.MAP" TO F.MAP ELSE'
    SRC<-1>='EXECUTE "ICREATE-FILE DATA MVHUB.MAP 18 101 4"'
    SRC<-1>='EXECUTE "ICREATE-FILE DICT MVHUB.MAP 18 11 4"'
    SRC<-1>='OPEN "MVHUB.MAP" TO F.MAP ELSE'
    SRC<-1>='ABORT "UNABLE TO CREATE MAP FILE"'
    SRC<-1>="END":@AM:"END":SEPARATOR
    SRC<-1>='OPEN "DICT","MVHUB.MAP" TO FD.MAP ELSE'
    SRC<-1>='ABORT "UNABLE TO OPEN DICT MAP FILE"'
    SRC<-1>="END":SEPARATOR
    SRC<-1>="CLEARFILE FD.MAP":SEPARATOR
*
    SRC<-1>='REC="D":@AM:0:@AM:"":@AM:"Map Id":@AM:"30L":@AM:"S"'
    SRC<-1>='WRITE REC ON FD.MAP,"@ID"':SEPARATOR
*
    SRC<-1>='REC="D":@AM:':MAP$TITLE:':@AM:"":@AM:"Title":@AM:"30L":@AM:"S"'
    SRC<-1>='WRITE REC ON FD.MAP,"TITLE"':SEPARATOR
*
    SRC<-1>='REC="D":@AM:':MAP$DATA.FILENAME:':@AM:"":@AM:"Database Filename":@AM:"30L":@AM:"S"'
    SRC<-1>='WRITE REC ON FD.MAP,"FILENAME"':SEPARATOR
*
    SRC<-1>='REC="D":@AM:':MAP$MAP.VERSION:':@AM:"":@AM:"Version":@AM:"12L":@AM:"S"'
    SRC<-1>='WRITE REC ON FD.MAP,"VERSION"':SEPARATOR
*
    SRC<-1>='REC="D":@AM:':MAP$DELIMITER:':@AM:"":@AM:"Delimiter":@AM:"9L":@AM:"S"'
    SRC<-1>='WRITE REC ON FD.MAP,"DELIMITER"':SEPARATOR
*
    SRC<-1>='REC="D":@AM:':MAP$SOURCEFILE:':@AM:"":@AM:"Source Code File":@AM:"15L":@AM:"S"'
    SRC<-1>='WRITE REC ON FD.MAP,"SOURCE.FILE"':SEPARATOR
*
    SRC<-1>='REC="D":@AM:':MAP$CREATECODE:':@AM:"":@AM:"Create Code":@AM:"80L":@AM:"S"'
    SRC<-1>='WRITE REC ON FD.MAP,"CREATE.CODE"':SEPARATOR
*
    SRC<-1>='REC="D":@AM:':MAP$READCODE:':@AM:"":@AM:"Read Code":@AM:"80L":@AM:"S"'
    SRC<-1>='WRITE REC ON FD.MAP,"Read.CODE"':SEPARATOR
*
    SRC<-1>='REC="D":@AM:':MAP$WRITECODE:':@AM:"":@AM:"Write Code":@AM:"80L":@AM:"S"'
    SRC<-1>='WRITE REC ON FD.MAP,"WRITE.CODE"':SEPARATOR
*
    SRC<-1>='REC="D":@AM:':MAP$INITCODE:':@AM:"":@AM:"Initialize Code":@AM:"80L":@AM:"S"'
    SRC<-1>='WRITE REC ON FD.MAP,"INIT.CODE"':SEPARATOR
*
    SRC<-1>='REC="D":@AM:':MAP$EVENTCODE:':@AM:"":@AM:"Event Code":@AM:"80L":@AM:"S"'
    SRC<-1>='WRITE REC ON FD.MAP,"EVENT.CODE"':SEPARATOR
*
    ASSOC.LIST=""
    SRC<-1>='REC="D":@AM:':MAP$ASSOC:':@AM:"":@AM:"Associated Key":@AM:"20L":@AM:"M":@AM:"ASSOCIATION"'
    SRC<-1>='WRITE REC ON FD.MAP,"ASSOC.KEY"':SEPARATOR ; ASSOC.LIST:=" ASSOC.KEY"
*
    SRC<-1>='REC="D":@AM:':MAP$NAME:':@AM:"":@AM:"Associated Name":@AM:"20L":@AM:"M":@AM:"ASSOCIATION"'
    SRC<-1>='WRITE REC ON FD.MAP,"ASSOC.NAME"':SEPARATOR ; ASSOC.LIST:=" ASSOC.NAME"
*
    SRC<-1>='REC="D":@AM:':MAP$DESCRIPTION:':@AM:"":@AM:"Associated Description":@AM:"30L":@AM:"M":@AM:"ASSOCIATION"'
    SRC<-1>='WRITE REC ON FD.MAP,"ASSOC.DESC"':SEPARATOR ; ASSOC.LIST:=" ASSOC.DESC"
*
    SRC<-1>='REC="D":@AM:':MAP$CTRLATTR:':@AM:"MD0":@AM:"Ctrl Attr":@AM:"20L":@AM:"M":@AM:"ASSOCIATION"'
    SRC<-1>='WRITE REC ON FD.MAP,"ASSOC.CTRLATTR"':SEPARATOR ; ASSOC.LIST:=" ASSOC.CTRLATTR"
*
    SRC<-1>='REC="PH":@AM:"':TRIM(ASSOC.LIST):'"'
    SRC<-1>='WRITE REC ON FD.MAP,"ASSOC"'
*
    FLD.LIST=""
    SRC<-1>='REC="D":@AM:':FLD$RECORD+MAP$BASE:':@AM:"":@AM:"Record":@AM:"4L":@AM:"M":@AM:"FIELDS"'
    SRC<-1>='WRITE REC ON FD.MAP,"FLD.RECORD"':SEPARATOR ; FLD.LIST:=" FLD.RECORD"
*
    SRC<-1>='REC="D":@AM:':FLD$NAME+MAP$BASE:':@AM:"":@AM:"Name":@AM:"20L":@AM:"M":@AM:"FIELDS"'
    SRC<-1>='WRITE REC ON FD.MAP,"FLD.NAME"':SEPARATOR ; FLD.LIST:=" FLD.NAME"
*
    SRC<-1>='REC="D":@AM:':FLD$ASSOC+MAP$BASE:':@AM:"":@AM:"Assocation":@AM:"20L":@AM:"M":@AM:"FIELDS"'
    SRC<-1>='WRITE REC ON FD.MAP,"FLD.ASSOC"':SEPARATOR ; FLD.LIST:=" FLD.ASSOC"
*
    SRC<-1>='REC="D":@AM:':FLD$ATTR+MAP$BASE:':@AM:"MD0":@AM:"Attr":@AM:"4R":@AM:"M":@AM:"FIELDS"'
    SRC<-1>='WRITE REC ON FD.MAP,"FLD.ATTR"':SEPARATOR ; FLD.LIST:=" FLD.ATTR"
*
    SRC<-1>='REC="D":@AM:':FLD$VALPOS+MAP$BASE:':@AM:"MD0":@AM:"VPos":@AM:"4R":@AM:"M":@AM:"FIELDS"'
    SRC<-1>='WRITE REC ON FD.MAP,"FLD.VAL"':SEPARATOR ; FLD.LIST:=" FLD.VAL"
*
    SRC<-1>='REC="D":@AM:':FLD$SUBVALPOS+MAP$BASE:':@AM:"MD0":@AM:"SPos":@AM:"4R":@AM:"M":@AM:"FIELDS"'
    SRC<-1>='WRITE REC ON FD.MAP,"FLD.SVAL"':SEPARATOR ; FLD.LIST:=" FLD.SVAL"
*
    SRC<-1>='REC="D":@AM:':FLD$TYPE+MAP$BASE:':@AM:"MCU":@AM:"Type":@AM:"4L":@AM:"M":@AM:"FIELDS"'
    SRC<-1>='WRITE REC ON FD.MAP,"FLD.TYPE"':SEPARATOR ; FLD.LIST:=" FLD.TYPE"
*
    SRC<-1>='REC="D":@AM:':FLD$CONV+MAP$BASE:':@AM:"":@AM:"Conversion":@AM:"20L":@AM:"M":@AM:"FIELDS"'
    SRC<-1>='WRITE REC ON FD.MAP,"FLD.CONV"':SEPARATOR ; FLD.LIST:=" FLD.CONV"
*
    SRC<-1>='REC="D":@AM:':FLD$LENGTH+MAP$BASE:':@AM:"MD0":@AM:"Length":@AM:"6R":@AM:"M":@AM:"FIELDS"'
    SRC<-1>='WRITE REC ON FD.MAP,"FLD.LENGTH"':SEPARATOR ; FLD.LIST:=" FLD.LENGTH"
*
    SRC<-1>='REC="D":@AM:':FLD$READONLY+MAP$BASE:':@AM:"MD0":@AM:"ReadOnly":@AM:"8L":@AM:"M":@AM:"FIELDS"'
    SRC<-1>='WRITE REC ON FD.MAP,"FLD.READONLY"':SEPARATOR ; FLD.LIST:=" FLD.READONLY"
*
    SRC<-1>='REC="D":@AM:':FLD$BEFORECONV+MAP$BASE:':@AM:"":@AM:"Before Conversion Code":@AM:"80L":@AM:"M":@AM:"FIELDS"'
    SRC<-1>='WRITE REC ON FD.MAP,"FLD.BC.CODE"':SEPARATOR ; FLD.LIST:=" FLD.BC.CODE"
*
    SRC<-1>='REC="D":@AM:':FLD$AFTERCONV+MAP$BASE:':@AM:"":@AM:"After Conversion Code":@AM:"80L":@AM:"M":@AM:"FIELDS"'
    SRC<-1>='WRITE REC ON FD.MAP,"FLD.AC.CODE"':SEPARATOR ; FLD.LIST:=" FLD.AC.CODE"
*
    SRC<-1>='REC="D":@AM:':FLD$COMMENT+MAP$BASE:':@AM:"":@AM:"Comment":@AM:"80L":@AM:"M":@AM:"FIELDS"'
    SRC<-1>='WRITE REC ON FD.MAP,"FLD.COMMENT"':SEPARATOR ; FLD.LIST:=" FLD.COMMENT"
*
    SRC<-1>='REC="PH":@AM:"':TRIM(FLD.LIST):'"'
    SRC<-1>='WRITE REC ON FD.MAP,"FIELDS"':SEPARATOR
*
    SRC<-1>='OPEN "MVHUB.LOG" TO F.MAPLOG ELSE'
    SRC<-1>=' EXECUTE "ICREATE-FILE DATA MVHUB.LOG 18 101 4"'
    SRC<-1>=' EXECUTE "ICREATE-FILE DICT MVHUB.LOG 18 11 4"'
    SRC<-1>=' OPEN "MVHUB.MAP" TO F.MAPLOG ELSE'
    SRC<-1>='  ABORT "UNABLE TO CREATE MAP LOG FILE"'
    SRC<-1>=" END"
    SRC<-1>="END":SEPARATOR
    SRC<-1>='OPEN "DICT","MVHUB.LOG" TO FD.MAPLOG ELSE'
    SRC<-1>=' ABORT "UNABLE TO OPEN DICT MAP FILE"'
    SRC<-1>="END":SEPARATOR
    SRC<-1>="CLEARFILE FD.MAPLOG":SEPARATOR
*
    SRC<-1>='REC="D":@AM:0:@AM:"":@AM:"Log Id":@AM:"30L":@AM:"S"'
    SRC<-1>='WRITE REC ON FD.MAPLOG,"@ID"':SEPARATOR
*
    CODE.ID="HANDLER.SUB.INCLUDE" ; COMPILE.IT=@FALSE ; GOSUB ADD.PROGRAM
    CODE.ID="MVHUB.MAP.INCLUDE" ; COMPILE.IT=@FALSE ; GOSUB ADD.PROGRAM
    CODE.ID="CREATE.MVHUB" ; COMPILE.IT=@TRUE ; GOSUB ADD.PROGRAM
    CODE.ID="TEST.HANDLER" ; COMPILE.IT=@TRUE ; GOSUB ADD.PROGRAM
*
    SRC<-1>='CRT "Create MVHUB.MAP Handler"'
    SRC<-1>='DELETE F.MAP,"MVHUB.MAP"'
    SRC<-1>='EXECUTE "CREATE.MVHUB MVHUB.MAP /BUILDMAP"'
    SRC<-1>='READ MAP.REC FROM F.MAP,"MVHUB.MAP" THEN ':@AM:"*"
*
    SRC<-1>='MAP.REC<':MAP$INITCODE:'>="INCLUDE MVHUB.BP MVHUB.MAP.INCLUDE"':@AM:"*"
*
    SRC<-1>=' MAP.REC<':MAP$WRITECODE:',-1>="CCODE=RECORD<':MAP$WRITECODE:'>; CONVERT CHAR$CRLF TO @VM:@VM IN CCODE; RECORD<':MAP$WRITECODE:'>=CCODE"'
    SRC<-1>=' MAP.REC<':MAP$WRITECODE:',-1>="CCODE=RECORD<':MAP$READCODE:'>; CONVERT CHAR$CRLF TO @VM:@VM IN CCODE; RECORD<':MAP$READCODE:'>=CCODE"'
    SRC<-1>=' MAP.REC<':MAP$WRITECODE:',-1>="CCODE=RECORD<':MAP$WRITECODE:'>; CONVERT CHAR$CRLF TO @VM:@VM IN CCODE; RECORD<':MAP$WRITECODE:'>=CCODE"'
    SRC<-1>=' MAP.REC<':MAP$WRITECODE:',-1>="WRITE RECORD ON FILE,ID"'
    SRC<-1>=' MAP.REC<':MAP$WRITECODE:',-1>=':"'":'EXECUTE ':QUOTE('CREATE.MVHUB MVHUB.MAP /COMPILE /CATALOG '):" CAPTURING MEMORY":"'"
    SRC<-1>="*"
*
    SRC<-1>=' WRITE MAP.REC ON F.MAP,"MVHUB.MAP"'
    SRC<-1>=' EXECUTE "CREATE.MVHUB MVHUB.MAP /COMPILE /CATALOG"'
    SRC<-1>="END"
*
    SRC<-1>="* End of Install Program"
    SRC<-1>='CRT "Install of MV Hub Complete"'
*
    WRITE SRC ON F.BP,"INSTALL.MVHUB"
    EXECUTE "FORMAT MVHUB.BP INSTALL.MVHUB"
    EXECUTE "BASIC MVHUB.BP INSTALL.MVHUB"
    EXECUTE "CATALOG MVHUB.BP INSTALL.MVHUB "
*
    STOP
*-------------------------------------------------------
ADD.PROGRAM:
*
    READ CODE FROM F.BP,CODE.ID ELSE ABORT CODE.ID
    ECODE="" ; STATUS = ENCODE("Base64",1,CODE,1,ECODE,1)
    IF STATUS # 0 THEN ABORT CODE.ID
    CONVERT CHAR$LINEFEED:CHAR$RETURN TO @AM IN ECODE
*
    SRC<-1>="* Add Record ":CODE.ID:" To File":SEPARATOR
    CNT=DCOUNT(ECODE,@AM)-1
    SRC<-1>='REC="':ECODE<1>:'":CHAR$LF:CHAR$RETURN'
    FOR C=2 TO CNT
        SRC<-1>='REC:="':ECODE<C>:'":CHAR$LF:CHAR$RETURN'
    NEXT C
*
    SRC<-1>='PROG.REC=""; STATUS = ENCODE("Base64",2,REC,1,PROG.REC,1)'
    SRC<-1>='CRT "Adding Source Code : ':CODE.ID:'"'
*
    SRC<-1>='    WRITE PROG.REC ON F.BP,"':CODE.ID:'"'
*
    IF COMPILE.IT THEN
        SRC<-1>='    EXECUTE "BASIC MVHUB.BP ':CODE.ID:'" CAPTURING MEMORY'
        SRC<-1>='    EXECUTE "CATALOG MVHUB.BP ':CODE.ID:'" CAPTURING MEMORY':SEPARATOR
    END
    SRC:=SEPARATOR
    COMPILE.IT=@FALSE
*
    RETURN
